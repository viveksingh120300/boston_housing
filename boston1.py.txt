from sklearn.model_selection import train_test_split
import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt
import seaborn as sns 
data = pd.read_csv(r'E:\backup2\Data science\projects_data_science\boston\boston.csv', sep = '\t')
data.head()
data.describe()
data.shape
plt.style.use('fivethirtyeight')
plt.figure(figsize = (12,7))
sns.distplot(data.medv, bins = 50)
print('skew is ', data.medv.skew())
numeric_features = data.select_dtypes(include = [np.number])
numeric_features.dtypes
corr = numeric_features.corr()
corr
f, ax = plt.subplots(figsize = (12,9))
sns.heatmap(corr, vmax = 1, square = True)
data['chas'].value_counts(normalize=True).plot(kind='bar')
plt.figure(figsize = (12,7))
plt.xlabel('b')
plt.ylabel('medv')
plt.plot(data.b, data['medv'], '.', alpha = 0.3)
plt.figure(figsize = (12,7))
plt.xlabel('lstat')
plt.ylabel('medv')
plt.plot(data.lstat, data['medv'], '.', alpha = 0.3)

plt.figure(figsize = (12,7))
plt.xlabel('rm')
plt.ylabel('medv')
plt.plot(data.rm, data['medv'], '.', alpha = 0.3)


rm_pivot = \
data.pivot_table(index = 'rm', values = 'medv', aggfunc = np.median)

rm_pivot.plot(kind= 'bar', color= 'blue', figsize = (12,7))
plt.xticks(rotation = 90)
plt.show()

data['medv'].isna().sum()



sns.pairplot(data, size=2.5)
plt.tight_layout()


from sklearn.metrics import r2_score
def perf_checker(y_true, y_predict):
    r_score = r2_score(y_true, y_predict)
    

prices = data['medv']
features = data.drop('medv', axis = 1)

X_train, X_test, y_train, y_test = train_test_split(features, prices, random_state = 5)



import visuals as vs
vs.ModelLearning(features, prices)


from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import make_scorer
from sklearn.model_selection import GridSearchCV

def fit_model(X, y):
    cv_sets = ShuffleSplit










